sudo: required
language: go
go_import_path: github.com/minio/minio

services:
 - docker

go:
- 1.9

env:
  global:
    - QEMU_VERSION=v2.11.0
    - REGISTRY=carlosedp
    - IMAGE=minio
  matrix:
    - TARGET=arm64v8 QEMU_ARCH=aarch64 TAG=arm64
    - TARGET=arm32v6 QEMU_ARCH=arm TAG=arm

install:
  - docker run --rm --privileged multiarch/qemu-user-static:register

script:
# Download
  - export DIR=`pwd`
  - export GOARCH=${TAG}
  - export VERSION=`curl -s https://api.github.com/repos/minio/minio/releases/latest | grep "tag_name" | cut -d\" -f4`
  - git clone https://github.com/minio/minio.git --depth=1 -b $VERSION
  - mkdir -p $GOPATH/github.com/minio
  - mv minio $GOPATH/github.com/minio
  - cd $GOPATH/src/github.com/minio/minio
  - curl -L -o qemu-${QEMU_ARCH}-static.tar.gz https://github.com/multiarch/qemu-user-static/releases/download/${QEMU_VERSION}/qemu-${QEMU_ARCH}-static.tar.gz && tar zx -f qemu-${QEMU_ARCH}-static.tar.gz
  - patch Dockerfile.release < $DIR/Dockerfile.arm.patch
  - make
  - diff -au <(gofmt -s -d cmd) <(printf "")
  - diff -au <(gofmt -s -d pkg) <(printf "")
  - make test GOFLAGS="-timeout 15m -race -v"
  - make coverage
  - docker build -t ${REGISTRY}/${IMAGE}:$VERSION-${TAG} --build-arg target=$TARGET --build-arg arch=$QEMU_ARCH -f Dockerfile.release .
# Build
# Check
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" ;
      docker push ${REGISTRY}/${IMAGE}:$VERSION-${TAG} ;
    fi

jobs:
  include:
    - stage: deploy
      script:
        - export VERSION=`curl -s https://api.github.com/repos/minio/minio/releases/latest | grep "tag_name" | cut -d\" -f4`
        - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
        - echo "Downloading manifest-tool"
        - wget https://github.com/estesp/manifest-tool/releases/download/v0.7.0/manifest-tool-linux-amd64
        - mv manifest-tool-linux-amd64 manifest-tool
        - chmod +x manifest-tool
        - ./manifest-tool --version
        - echo "Pushing manifest "$IMAGE":latest"
        - ./manifest-tool push from-args --platforms linux/arm,linux/arm64 --template "$IMAGE:$VERSION-ARCH" --target "$IMAGE:latest"
        - ./manifest-tool push from-args --platforms linux/arm,linux/arm64 --template "$IMAGE:$VERSION-ARCH" --target "$IMAGE:$VERSION"
      env:
        # Overwrite env to avoid running stage for entire
        TARGET=none QEMU_ARCH=none TAG=none
